{"version":3,"file":"ngx-pattern.mjs","sources":["../../../projects/ngx-pattern/src/lib/ngx-pattern.directive.ts","../../../projects/ngx-pattern/src/lib/ngx-pattern.module.ts","../../../projects/ngx-pattern/src/public-api.ts","../../../projects/ngx-pattern/src/ngx-pattern.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[ngxPattern]'\r\n})\r\nexport class NgxPatternDirective implements OnChanges, OnInit, OnDestroy {\r\n  private unsubscribeSubj: Subject<void> = new Subject<void>();\r\n  @Input() ngxPattern: RegExp | string;\r\n\r\n  private regex: RegExp;\r\n  private lastSelectionStart = 0;\r\n  private lastSelectionEnd = 0;\r\n  private lastValue = '';\r\n\r\n  constructor(@Inject(ElementRef) private host: ElementRef, @Optional() @Inject(NgControl) private control: NgControl) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.host.nativeElement, 'paste')\r\n      .pipe(\r\n        takeUntil(this.unsubscribeSubj),\r\n        tap((e: ClipboardEvent) => this.onPaste(e))\r\n      )\r\n      .subscribe();\r\n\r\n    fromEvent(this.host.nativeElement, 'keydown')\r\n      .pipe(\r\n        takeUntil(this.unsubscribeSubj),\r\n        tap((e: KeyboardEvent) => this.onKeyDown(e))\r\n      )\r\n      .subscribe();\r\n\r\n    fromEvent(this.host.nativeElement, 'touchend')\r\n      .pipe(\r\n        takeUntil(this.unsubscribeSubj),\r\n        tap((e: TouchEvent) => this.onClick(e))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.ngxPattern) {\r\n      if (typeof this.ngxPattern === 'string') {\r\n        this.regex = new RegExp(`^${this.ngxPattern}$`, 'g');\r\n      } else {\r\n        this.regex = this.ngxPattern;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribeSubj.next();\r\n    this.unsubscribeSubj.unsubscribe();\r\n  }\r\n\r\n  private initSelectionValues(input: HTMLInputElement) {\r\n    this.lastValue = input.value || '';\r\n    const {\r\n      selectionStart,\r\n      selectionEnd,\r\n    } = this.inputEl;\r\n    if (selectionStart !== null) {\r\n      this.lastSelectionStart = selectionStart;\r\n    }\r\n    if (selectionEnd !== null) {\r\n      this.lastSelectionEnd = selectionEnd;\r\n    }\r\n  }\r\n\r\n  private onKeyDown(e?: KeyboardEvent): void {\r\n    const input = e?.currentTarget as HTMLInputElement;\r\n    this.initSelectionValues(input);\r\n    if (this.regex && e && !e.ctrlKey && !e.metaKey && !isSpecialKey(e.key)) {\r\n      if (!this.validWithChange(e.key)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(ev: Event): void {\r\n    this.initSelectionValues(ev.target as HTMLInputElement);\r\n  }\r\n\r\n  @HostListener('input', [])\r\n  onInput(): void {\r\n    if (this.currentValue && !this.textIsValid(this.currentValue)) {\r\n      // Mobile browsers don't support keydown preventDefault and return\r\n      // Unidentified for the pressed key. We need to detect the change on input event and undo.\r\n      document.execCommand('undo');\r\n    }\r\n  }\r\n\r\n  private onPaste(e?: ClipboardEvent): void {\r\n    const pastedInput = e?.clipboardData?.getData('text/plain');\r\n    if (pastedInput) {\r\n      e?.preventDefault();\r\n      if (this.validWithChange(pastedInput)) {\r\n        const text = this.lastValue.substring(0, this.lastSelectionStart) + pastedInput + this.lastValue.substring(this.lastSelectionEnd);\r\n        if (this.control) {\r\n          this.control.control?.setValue(text);\r\n        } else {\r\n          this.inputEl.value = text;\r\n        }\r\n        this.inputEl.setSelectionRange(this.lastSelectionEnd + pastedInput.length, this.lastSelectionStart + pastedInput.length);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(e: DragEvent): void {\r\n    const textData = e.dataTransfer?.getData('text');\r\n\r\n    if (textData && !this.validWithChange(textData)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  get currentValue(): string | undefined {\r\n    return this.inputEl ? this.inputEl.value : undefined;\r\n  }\r\n\r\n  private validWithChange(delta: string): boolean {\r\n    const {\r\n      value: current,\r\n      selectionStart,\r\n      selectionEnd,\r\n    } = this.inputEl;\r\n    if (selectionEnd === null || selectionStart === null) {\r\n      return false;\r\n    }\r\n    const updated = current.substring(0, selectionStart) + delta + current.substring(selectionEnd + 1);\r\n    return this.textIsValid(updated);\r\n  }\r\n\r\n  private textIsValid(text: string): boolean {\r\n    const result = !text || this.regex.test(text);\r\n    this.regex.lastIndex = 0;\r\n\r\n    return result;\r\n  }\r\n\r\n  get inputEl(): HTMLInputElement {\r\n    return this.host.nativeElement;\r\n  }\r\n}\r\n\r\n/** @see https://developer.mozilla.org/bg/docs/Web/API/KeyboardEvent/key/Key_Values */\r\nfunction isSpecialKey(key: string): boolean {\r\n  return key.length > 1;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxPatternDirective } from './ngx-pattern.directive';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [NgxPatternDirective],\r\n  imports: [\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    NgxPatternDirective\r\n  ]\r\n})\r\nexport class NgxPatternModule {\r\n}\r\n","/*\r\n * Public API Surface of ngx-pattern\r\n */\r\n\r\nexport * from './lib/ngx-pattern.directive';\r\nexport * from './lib/ngx-pattern.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}