{"version":3,"file":"ngx-pattern.js","sources":["../../../projects/ngx-pattern/src/lib/ngx-pattern.directive.ts","../../../projects/ngx-pattern/src/lib/ngx-pattern.module.ts","../../../projects/ngx-pattern/src/public-api.ts","../../../projects/ngx-pattern/src/ngx-pattern.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[ngxPattern]'\r\n})\r\nexport class NgxPatternDirective implements OnChanges, OnInit, OnDestroy {\r\n  @Input() ngxPattern: RegExp | string;\r\n\r\n  private regex: RegExp;\r\n  private lastSelectionStart = 0;\r\n  private lastSelectionEnd = 0;\r\n  private lastValue = '';\r\n  onPasteHandler: (e: ClipboardEvent) => void;\r\n  onKeydownHandler: (e: KeyboardEvent) => void;\r\n\r\n  constructor(@Inject(ElementRef) private host: ElementRef, @Optional() @Inject(NgControl) private control: NgControl) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onPasteHandler = (e: ClipboardEvent) => {\r\n      this.onPaste(e);\r\n    };\r\n    this.onKeydownHandler = (e: KeyboardEvent) => {\r\n      this.onKeyDown(e);\r\n    };\r\n    this.host.nativeElement.addEventListener('keydown', this.onKeydownHandler);\r\n    this.host.nativeElement.addEventListener('paste', this.onPasteHandler);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.ngxPattern) {\r\n      if (typeof this.ngxPattern === 'string') {\r\n        this.regex = new RegExp(`^${this.ngxPattern}$`, 'g');\r\n      } else {\r\n        this.regex = this.ngxPattern;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.host.nativeElement.removeEventListener('keydown', this.onKeydownHandler);\r\n    this.host.nativeElement.removeEventListener('paste', this.onPasteHandler);\r\n  }\r\n\r\n  private onKeyDown(e?: KeyboardEvent): void {\r\n    const input = e?.currentTarget as HTMLInputElement;\r\n    this.lastValue = input.value || '';\r\n    const {\r\n      selectionStart,\r\n      selectionEnd,\r\n    } = this.inputEl;\r\n    if (selectionStart !== null) {\r\n      this.lastSelectionStart = selectionStart;\r\n    }\r\n    if (selectionEnd !== null) {\r\n      this.lastSelectionEnd = selectionEnd;\r\n    }\r\n    if (this.regex && e && !e.ctrlKey && !e.metaKey && !isSpecialKey(e.key)) {\r\n      if (!this.validWithChange(e.key)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('input', [])\r\n  onInput(): void {\r\n    if (this.currentValue && !this.textIsValid(this.currentValue)) {\r\n      // Mobile browsers don't support keydown preventDefault and return\r\n      // Unidentified for the pressed key. We need to detect the change on input event and undo.\r\n      document.execCommand('undo');\r\n    }\r\n  }\r\n\r\n  private onPaste(e?: ClipboardEvent): void {\r\n    const pastedInput = e?.clipboardData?.getData('text/plain');\r\n    if (pastedInput) {\r\n      e?.preventDefault();\r\n      if (this.validWithChange(pastedInput)) {\r\n        const text = this.lastValue.substring(0, this.lastSelectionStart) + pastedInput + this.lastValue.substring(this.lastSelectionEnd);\r\n        if (this.control) {\r\n          this.control.control?.setValue(text);\r\n        } else {\r\n          this.inputEl.value = text;\r\n        }\r\n        this.inputEl.setSelectionRange(this.lastSelectionEnd + pastedInput.length, this.lastSelectionStart + pastedInput.length);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(e: DragEvent): void {\r\n    const textData = e.dataTransfer?.getData('text');\r\n\r\n    if (textData && !this.validWithChange(textData)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  get currentValue(): string | undefined {\r\n    return this.inputEl ? this.inputEl.value : undefined;\r\n  }\r\n\r\n  private validWithChange(delta: string): boolean {\r\n    const {\r\n      value: current,\r\n      selectionStart,\r\n      selectionEnd,\r\n    } = this.inputEl;\r\n    if (selectionEnd === null || selectionStart === null) {\r\n      return false;\r\n    }\r\n    const updated = current.substring(0, selectionStart) + delta + current.substring(selectionEnd + 1);\r\n    return this.textIsValid(updated);\r\n  }\r\n\r\n  private textIsValid(text: string): boolean {\r\n    const result = !text || this.regex.test(text);\r\n    this.regex.lastIndex = 0;\r\n\r\n    return result;\r\n  }\r\n\r\n  get inputEl(): HTMLInputElement {\r\n    return this.host.nativeElement;\r\n  }\r\n}\r\n\r\n/** @see https://developer.mozilla.org/bg/docs/Web/API/KeyboardEvent/key/Key_Values */\r\nfunction isSpecialKey(key: string): boolean {\r\n  return key.length > 1;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxPatternDirective } from './ngx-pattern.directive';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [NgxPatternDirective],\r\n  imports: [\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    NgxPatternDirective\r\n  ]\r\n})\r\nexport class NgxPatternModule {\r\n}\r\n","/*\r\n * Public API Surface of ngx-pattern\r\n */\r\n\r\nexport * from './lib/ngx-pattern.directive';\r\nexport * from './lib/ngx-pattern.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}